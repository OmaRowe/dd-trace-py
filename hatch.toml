[envs.lint]
detached = true
python = "3.10"
dependencies = [
    "black==21.4b2",
    "isort==5.12.0",
    # See https://github.com/psf/black/issues/2964 for incompatibility with click==8.1.0
    "click<8.1.0",
    "cython-lint",
    "codespell==2.1.0",
    "bandit",
    "mypy==0.991",
    "coverage",
    "envier==0.4.0",
    "types-attrs==19.1.0",
    "types-docutils==0.19.1.1",
    "types-protobuf==3.20.4.5",
    "types-PyYAML==6.0.12.2",
    "types-setuptools==65.6.0.0",
    "types-six==1.16.21.4",
    "ddapm-test-agent>=1.2.0",
    "packaging",
    "flake8>=3.8,<3.9",
    "flake8-blind-except",
    "flake8-builtins",
    "flake8-docstrings",
    "flake8-logging-format",
    "flake8-rst-docstrings",
    "flake8-isort",
    "pygments",
    "riot==0.17.4",
]

[envs.lint.scripts]
style = [
    "isort -q {args:.}",
    "black -q {args:.}",
    "flake8 {args}",
    "cython-lint {args:.}",
]
spelling = [
    "codespell --skip='ddwaf.h' {args:ddtrace/ tests/}",
]
typing = [
    "mypy {args}",
]
security = [
    "bandit -c pyproject.toml {args:-r ddtrace/}",
]
fmt-snapshots = [
    "ddapm-test-agent-fmt {args:tests/snapshots/}",
]
riot = [
    "python -m doctest {args} riotfile.py"
]

[envs.docs]
type = "container"
template = "docs"
dev-mode = false
python = "3.10"
features = ["opentracing"]
extra-dependencies = [
    "reno[sphinx]~=3.5.0",
    "sphinx~=4.0",
    "sphinxcontrib-spelling==7.7.0",
    "PyEnchant==3.2.2",
    "sphinx-copybutton==0.5.1",
    "furo",
]
pre-install-commands = [
    "scripts/docs/install.sh",
]

[envs.docs.scripts]
build = [
    "scripts/docs/build.sh",
]

[envs.docs.overrides]
# CircleCI executor is an image already set up for docs
# We skip the pre-install as well
env.CIRCLECI.type = [
    { value = "virtual", if = ["true"] },
]

[envs.integration_test]
template = "integration_test"
extra-dependencies = [
    "mock==5.0.1",
    "pytest==7.2.2",
    "pytest-mock==3.10.0",
    "coverage==7.2.2",
    "pytest-cov==4.0.0",
    "opentracing==2.4.0",
    "hypothesis==6.45.0",
]

[envs.integration_test.scripts]
start-services = [ "docker compose up -d $DOCKER_SERVICES" ]
stop-services = [ "docker compose down {args}" ]

[envs.appsec]
template = "integration_test"
dependencies = [
    "requests==2.30.0",
    "gunicorn==20.1.0",
    "flask==2.3.2",
    "pycryptodome==3.17",
    "cryptography==40.0.2",
    "astunparse==1.6.3",
    "pytest-docker==2.0.0",
]

[[envs.appsec.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]


[envs.appsec.env-vars]
DD_IAST_REQUEST_SAMPLING = "100"  # Override default 30% to analyze all IAST requests
DOCKER_SERVICES = "testagent"
SNAPSHOT_CI = "1"
DD_TRACE_AGENT_URL = "http://localhost:9126"

[envs.appsec.scripts]
test = [
    "start-services",
    "pytest tests/appsec {args}",
]
